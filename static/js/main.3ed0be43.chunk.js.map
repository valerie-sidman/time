{"version":3,"sources":["components/DateTime.js","components/Video.js","components/DateTimePretty.js","App.js","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","Video","ConvertedDate","console","log","this","moment","startOf","fromNow","convertingRelativeTime","React","Component","src","url","frameborder","allow","allowfullscreen","VideoList","list","map","item","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEe,SAASA,EAASC,GAC/B,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,O,wDCClB,SAASC,EAAMH,GAC5B,ICHqCD,EAAUG,EDGzCE,GCH+BL,EDGAA,ECHUG,EDGAF,EAAME,KCFrD,kDAEE,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDE,KAAOA,EACZG,QAAQC,IAAI,EAAKJ,MAHA,EAFrB,0DAQE,WAEE,OADAG,QAAQC,IAAIC,KAAKL,MACVM,IAAOD,KAAKL,MAAMO,QAAQ,OAAOC,YAV5C,oBAaE,WACE,OAAO,cAACX,EAAD,2BAAcQ,KAAKP,OAAnB,IAA0BE,KAAMK,KAAKI,gCAdhD,GAAqBC,IAAMC,YDG3B,OACI,sBAAKZ,UAAU,QAAf,UACI,wBAAQa,IAAKd,EAAMe,IAAKC,YAAY,IAAIC,MAAM,4BAA4BC,iBAAe,IACzF,cAACd,EAAD,CAAeF,KAAMF,EAAME,UENrC,SAASiB,EAAUnB,GACf,OAAOA,EAAMoB,KAAKC,KAAI,SAAAC,GAAI,OAAI,cAACnB,EAAD,CAAOY,IAAKO,EAAKP,IAAKb,KAAMoB,EAAKpB,UAGpD,SAASqB,IAAO,IAAD,EACXC,mBAAS,CACpB,CACIT,IAAK,gFACLb,KAAM,uBAEV,CACIa,IAAK,gFACLb,KAAM,uBAEV,CACIa,IAAK,gFACLb,KAAM,uBAEV,CACIa,IAAK,gFACLb,KAAM,uBAEV,CACIa,IAAK,gFACLb,KAAM,uBAEV,CACIa,IAAK,gFACLb,KAAM,yBAvBPkB,EADmB,oBA4B1B,OACI,cAACD,EAAD,CAAWC,KAAMA,ICrCzB,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ed0be43.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function DateTime(props) {\n  return (\n      <p className=\"date\">{props.date}</p>\n  )\n}\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from 'react';\nimport DateTime from './DateTime';\nimport DateTimePretty from './DateTimePretty';\n\nexport default function Video(props) {\n  const ConvertedDate = DateTimePretty(DateTime, props.date)\n  return (\n      <div className=\"video\">\n          <iframe src={props.url} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n          <ConvertedDate date={props.date} />\n      </div>\n  )\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default function DateTimePretty(DateTime, date) {\n  return class extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.date = date;\n      console.log(this.date);\n    }\n\n    convertingRelativeTime() {\n      console.log(this.date);\n      return moment(this.date).startOf('day').fromNow();\n    }\n\n    render() {\n      return <DateTime {...this.props} date={this.convertingRelativeTime()}/>\n    }\n  }\n}\n","// import { ReactComponent } from '*.svg';\nimport React, { useState } from 'react';\nimport Video from '../src/components/Video';\n\nfunction VideoList(props) {\n    return props.list.map(item => <Video url={item.url} date={item.date} />);\n}\n\nexport default function App() {\n    const [list] = useState([\n        {\n            url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2017-07-31 13:24:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-03-03 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-02-03 23:16:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-01-03 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-01-01 16:17:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2017-12-02 05:24:00'\n        },\n    ]);\n\n    return (\n        <VideoList list={list} />\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}